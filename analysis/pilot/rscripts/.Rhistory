install.packages("swirl")
library(swirl)
install.packages("swirl")
library(swirl)
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
library(plyr)
library(dplyr)
library(reshape)
library(ggplot2)
library(gtable)
library(lme4)
library(tidyverse)
library(simr)
library(lmerTest)
library(brms)
library(bootstrap)
library(ggpubr)
`%notin%` <- Negate(`%in%`)
raw_data_path <- "../data/pilot1_raw.csv"
data<-read.csv(raw_data_path)
cbPalette = c("#d55e00", "#009e74","#e69d00","#cc79a7", "#0071b2")
d <- read.csv("../data/pilot1_cleaned.csv")
d$item_type <- factor(d$item_type, levels = c("FILL", "WH","SUBJ","UNGRAM"))
d$phase <- factor(d$phase, levels = c("pre-exposure", "exposure", "test"))
d_no_ungram <- subset(d, item_type != "UNGRAM")
d_no_ungram$item_type <- factor(d_no_ungram$item_type, levels = c("FILL", "SUBJ", "WH") )
d_no_fillers <- subset(d_no_ungram, item_type != "FILL")
d_no_fillers$item_type <- factor(d_no_fillers$item_type, c("SUBJ", "WH"))
d_no_fillers$exposure_condition <- factor(d_no_fillers$exposure_condition, c("SUBJ", "WH"))
# d_no_fillers$exposure_condition <- relevel(d_no_fillers$exposure_condition, ref="SUBJ")
d_pre_post <- subset(d_no_fillers, phase != "exposure")
d_pre_post$phase <- factor(d_pre_post$phase, levels = c("pre-exposure", "test"))
phase_model <- lmer(
response ~ phase * exposure_condition +
(1 + phase | workerid) +
(1 + exposure_condition*phase | item_number),
data = d_pre_post,
# verbose = 100
)
d_pre_post$phase <- factor(d_pre_post$phase, levels = c("pre-exposure", "test"))
phase_model <- lmer(
response ~ phase * exposure_condition +
(1 + phase | workerid) +
(1 + exposure_condition | item_number),
data = d_pre_post,
# verbose = 100
)
sink(file="generalization_model.txt")
summary(phase_model)
sink(file=NULL)
d_exposure <- subset(d_no_ungram, phase == "exposure")
trial_model <- lmer(
response ~ trial_sequence_total * item_type +
(1 + trial_sequence_total | workerid) +
(1 + trial_sequence_total | item_number),
data = d_exposure,
# verbose = 100
)
sink(file="satiation_model.txt")
summary(trial_model)
summary(trial_model)
sink(file=NULL)
summary(trial_model)
d_exposure <- subset(d_no_ungram, phase == "exposure")
trial_model <- lmer(
response ~ trial_sequence_total * item_type +
(1 + trial_sequence_total | workerid) +
(1 + trial_sequence_total | item_number),
data = d_exposure,
# verbose = 100
)
sink(file="satiation_model.txt")
summary(trial_model)
sink(file=NULL)
?sink
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
d <- read.csv("../data/pilot2_cleaned.csv")
d$item_type <- factor(d$item_type, levels = c("FILL", "WH","SUBJ","UNGRAM"))
d$phase <- factor(d$phase, levels = c("exposure", "test"))
d$phase2 <- factor(d$phase2, levels= c("pre-exposure", "exposure", "test"))
#d <- subset(d, group == "mismatch")
d_no_ungram <- subset(d, item_type != "UNGRAM")
d_no_ungram$item_type <- factor(d_no_ungram$item_type, levels = c("FILL", "SUBJ", "WH") )
d_no_fillers <- subset(d_no_ungram, item_type != "FILL")
d_no_fillers$item_type <- factor(d_no_fillers$item_type, c("WH", "SUBJ"))
d_no_fillers$exposure_condition <- factor(d_no_fillers$exposure_condition, c("SUBJ", "WH"))
d_no_fillers$phase <- factor(d_no_fillers$phase, c("test", "exposure"))
phase_model <- lmer(
response ~ phase * exposure_condition +
(1 + phase | workerid) +
(1 + exposure_condition*phase | item_number),
data = d_no_fillers,
# verbose = 100
)
# save output to a txt file
sink(file="generalization_model1.txt")
summary(phase_model)
sink(file=NULL)
dd <- subset(d_no_fillers, phase2 != "exposure")
dd <- subset(dd, !(phase2 == "pre-exposure" & group == "mismatch"))
dd <- subset(dd, !(phase2 == "test" & group == "match"))
dd$phase2 <- factor(dd$phase2, levels = c("pre-exposure", "test"))
phase_model2 <- lmer(
response ~ phase2 +
(1 | workerid) +
(1 | item_number),
data = dd
)
# save output to a txt file
sink(file="generalization_model2.txt")
summary(phase_model)
sink(file=NULL)
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
d <- read.csv("../data/pilot1_cleaned.csv")
d$item_type <- factor(d$item_type, levels = c("FILL", "WH","SUBJ","UNGRAM"))
d$phase <- factor(d$phase, levels = c("pre-exposure", "exposure", "test"))
d = subset(d, block_sequence != "practice")
#d <- subset(d, group == "mismatch")
d_no_ungram <- subset(d, item_type != "UNGRAM")
d_no_ungram$item_type <- factor(d_no_ungram$item_type, levels = c("FILL", "SUBJ", "WH") )
d_no_fillers <- subset(d_no_ungram, item_type != "FILL")
d_no_fillers$item_type <- factor(d_no_fillers$item_type, c("WH", "SUBJ"))
d_no_fillers_mismatch <- subset(d_no_fillers, group == "mismatch")
d_no_fillers_control <- subset(d_no_fillers, group == "match")
theta <- function(x,xdata,na.rm=T) {mean(xdata[x],na.rm=na.rm)}
ci.low <- function(x,na.rm=T) {
quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,.025,na.rm=na.rm)}
ci.high <- function(x,na.rm=T) {
quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,.975,na.rm=na.rm)}
# chart with fillers curves
nd = d %>%
mutate(item_type = fct_recode(item_type,"grammatical"="FILL","ungrammatical"="UNGRAM", "subject island"="SUBJ", "whether island"="WH")) %>%
#, "complex-NP island"="CNPC", "whether island"="WH")) %>%
mutate(item_type = fct_relevel(item_type,"grammatical","whether island","subject island", "ungrammatical"))
trial_means = nd %>%
group_by(exposure_condition,item_type,phase,trial_sequence_total) %>%
summarize(response = mean(response)) %>%
ungroup()
ggplot(nd, aes(x=trial_sequence_total, y=response, color = item_type)) +
geom_point(data=trial_means,alpha=.9, mapping=aes(shape=exposure_condition)) +
xlab("Trial Sequence") +
ylab("Acceptability rating")+
# geom_smooth(data=subset(trial_means, item_type=="grammatical"),method=lm, aes(fill=item_type))+
# geom_smooth(data=subset(trial_means, item_type=="whether island"),method=lm, aes(fill=item_type))+
# geom_smooth(data=subset(trial_means, item_type=="subject island"),method=lm, aes(fill=item_type))+
# geom_smooth(data=subset(trial_means, item_type=="ungrammatical"),method=lm, aes(fill=item_type))+
geom_smooth(data=trial_means,method=lm, aes(fill=item_type))+
scale_color_manual(values=cbPalette) +
scale_fill_manual(values=cbPalette) +
theme_bw()
new_d = d_no_fillers
trial_means = new_d %>%
group_by(exposure_condition, phase,trial_sequence_total) %>%
summarize(response = mean(response)) %>%
ungroup()
curve_split <- ggplot(new_d, aes(x=trial_sequence_total, y=response, color = exposure_condition)) +
geom_point(data=trial_means,alpha=.9) +
scale_color_manual(values=cbPalette) +
scale_fill_manual(values=cbPalette) +
xlab("Trial Sequence") +
ylab("Acceptability rating")+
geom_smooth(data=subset(trial_means, phase=="exposure"),method=lm, aes(fill=exposure_condition))+
geom_smooth(data=subset(trial_means, phase=="pre-exposure"),method=lm, aes(fill=exposure_condition))+
geom_smooth(data=subset(trial_means, phase=="test"),method=lm, aes(fill=exposure_condition))+
geom_vline(xintercept=12, linetype="dashed", size=1) +
geom_vline(xintercept=52, linetype="dashed",
size=1)+
theme_bw()
ggsave("../graphs/pilot1_phase_curves.pdf",width=5,height=2.5)
curve_split
phase_avg = d_no_fillers %>%
group_by(phase,exposure_condition) %>%
summarize(Mean = mean(response), CILow = ci.low(response), CIHigh = ci.high(response)) %>%
ungroup() %>%
mutate(YMin=Mean-CILow,YMax=Mean+CIHigh)
phase_avg = subset(phase_avg, phase != "exposure")
phase_graph<- ggplot(phase_avg, aes(x=exposure_condition,y=Mean, fill=phase)) +
geom_bar(data=phase_avg, stat="identity", position="dodge") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25,position=position_dodge(.9)) +
scale_fill_brewer(palette = cbPalette) +
xlab("exposure type") +
ylab("average acceptability") +
theme_bw()
phase_graph
